/***************************************************************************
*
* AFS Â© 2013 Antidot
*
***************************************************************************/
// java_antidot_api
package N_Query_Engine.ReplySet;

import "COMMON/MESSAGES/serialize.proto";
import "COMMON/MESSAGES/serialize_xml.proto";
import "COMMON/MESSAGES/serialize_xsd.proto";
import "COMMON/MESSAGES/serialize_json.proto";
import "AFS/MESSAGES/sort_infos.proto";
import "AFS/MESSAGES/pager.proto";
import "AFS/MESSAGES/facets.proto";
import "AFS/MESSAGES/concept.proto";
import "AFS/MESSAGES/suggest.proto";
import "AFS/MESSAGES/posidx.proto";
import "AFS/MESSAGES/agent.proto";

option java_package = "net.antidot.protobuf.reply";
option java_outer_classname = "ReplySetProto";

message ReplySet
{
  optional Meta meta = 1;
  optional bool secured = 6  // 7.5 ->
	[ default = false ];
  optional Facets facets = 2;
  repeated RelatedExpressions rte = 3;
  optional Content content = 4;
  optional Pager pager = 5;
  extensions 1100 to 1189;
}

message RelatedExpressions
{
  required string expr = 1; // the related expression
}

message Content
{
  repeated Cluster cluster = 1;
  repeated Reply reply = 2;
}

message Cluster
{
  required string	id = 1; // Facet id for this cluster
  required uint64	totalItems = 2; // total number of replies in cluster
  required bool		totalItemsIsExact = 3; // is the count exact or
											// approximate
  required uint64	pageItems = 4; // number of items send in
									  // this cluster page
  required uint64	firstPageItem = 5; // first reply number in page
  required uint64	lastPageItem = 6; // last reply number in page

  repeated Reply reply = 7;
}

message Meta
{
  required string	uri = 1; // feed name
  required uint64	totalItems = 2; // total number of replies in reply set
  required bool		totalItemsIsExact = 3; // is the count exact or
											// approximate
  required uint64	pageItems = 4; // number of items send in
									  // this Reply Set page
  required uint64	firstPageItem = 5; // first reply number in page
  required uint64	lastPageItem = 6; // last reply number in page
  required int32	durationMs = 7;
  optional string	cluster = 8; // cluster name in case of clusterisation
  required uint64	firstPaFId  = 9;
  required uint64	lastPaFId  = 10;
  optional Agent.Type	producer = 11 // name of producing agent
    [(N_Protobuf.Serialize.XML.force_lowercase_value) = true ];
  optional uint64	totalItemsInClusters = 12; // number of items
											   // shown in clusters
  optional uint64	nbClusters = 13; // number of clusters
  optional uint64 lastTimestamp = 14; // 7.6-> if parameter
  // data:timestampId is set,
  // then this will contain maximum value of this facet for results
}

message Reply
{
  required uint64 docId = 1;
  required bytes uri = 2;
  repeated Kwic title = 3
	[(N_Protobuf.Serialize.XML.single_list) = true];
  repeated Kwic abstract = 4
	[(N_Protobuf.Serialize.XML.single_list) = true];
  optional uint64 contextId = 5
	[(N_Protobuf.Serialize.requires_env) = "afs:explain=debug"];
  optional string feedUri = 6
	[(N_Protobuf.Serialize.requires_env) = "afs:explain=debug"];
  optional uint64 bestMatchPage = 7;
  extensions 1000 to 1099;
}


message Kwic
{
  option (N_Protobuf.Serialize.N_JSON.is_inheritance) = true;
  extensions 1100 to 1199;
}

// A string does not match the query
message KwicString
{
  required string text = 1
	[(N_Protobuf.Serialize.XML.force_element) = true];
}

// A string that matches the query
message KwicMatch
{
  required string match = 1
	[(N_Protobuf.Serialize.XML.force_anonymous_element) = true];
  optional uint32 page = 2;
}

// A truncation mark
message KwicTruncate
{
}

extend Kwic
{
  optional KwicString kwic_string_ext = 1100
	[(N_Protobuf.Serialize.XML.no_element) = true];
  optional KwicMatch kwic_match_ext = 1101
	[(N_Protobuf.Serialize.XML.name) = "match"];
  optional KwicTruncate kwic_truncate_ext = 1102
	[(N_Protobuf.Serialize.XML.name) = "trunc" ];
}

// Relevance information for a Reply (run-time, query dependent)
message Relevance
{
  optional uint64 rank = 1; // order number in reply list
  optional uint32 words = 2
	[(N_Protobuf.Serialize.requires_env) = "afs:explain=relevance"];
  optional bool field_match = 3
	[(N_Protobuf.Serialize.requires_env) = "afs:explain=relevance",
     (N_Protobuf.Serialize.XML.name) = "fieldMatch",
     (N_Protobuf.Serialize.N_JSON.name) = "fieldMatch"];
  optional uint32 pathlen = 4
	[(N_Protobuf.Serialize.requires_env) = "afs:explain=relevance"];
  optional uint32 weight = 5
	[(N_Protobuf.Serialize.requires_env) = "afs:explain=relevance"];
}

// Client additional data for a Reply in XML format
message Client_Datas
{
  repeated Client_Data clientData = 1;
}

message Client_Data
{
  required string contents = 1
	[ (N_Protobuf.Serialize.XML.raw_xml_content) = true,
	  (N_Protobuf.Serialize.N_JSON.raw_content) = true,
	  (N_Protobuf.Serialize.XSD.generate_any_type) = true,
	  (N_Protobuf.Serialize.XML.force_anonymous_element) = true
	  ];
  optional string id = 2
	[ default = "" ]; // 7.6 ; todo store as attribute of contents
  optional string mimeType = 3; // 7.6 ->

  extensions 1200 to 1299;
}

extend Client_Data
{
  optional N_Index.Positions_In_Index positions = 1201
	[(N_Protobuf.Serialize.XSD.do_not_serialize) = true]; // -> 7.5, compat
  repeated Geo geo_cdata_ext = 1202
	[ (N_Protobuf.Serialize.XML.name) = "geo",
	  (N_Protobuf.Serialize.XSD.do_not_serialize) = true]; // -> 7.5, compat
}

message Client_Data_75
{
  required string contents = 1
	[ (N_Protobuf.Serialize.XML.raw_xml_content) = true,
	  (N_Protobuf.Serialize.N_JSON.raw_content) = true,
	  (N_Protobuf.Serialize.XSD.generate_any_type) = true,
	  (N_Protobuf.Serialize.XML.force_element) = true,
	  (N_Protobuf.Serialize.XML.name) = "clientData"
	  ];
}

message Tag
{
  required string id = 1;
  required string value = 2;
}

message ClusterInfos
{
  required string clusterId = 1010;
  required uint32 remainingReplies = 1011;
}

extend Reply
{
  optional Relevance relevance_ext = 1000
	[ (N_Protobuf.Serialize.XML.name) = "relevance",
      (N_Protobuf.Serialize.N_JSON.name) = "relevance"];
  optional N_Index.Positions_In_Index title_positions = 1001;
  optional N_Index.Positions_In_Index abstract_positions = 1002;
  optional N_Index.Positions_In_Index clientdata_positions = 1003; // -> 7.5
  optional Client_Datas client_datas_ext = 1012
	[(N_Protobuf.Serialize.XML.no_element) = true,
     (N_Protobuf.Serialize.N_JSON.no_element) = true]; // 7.6 ->
  optional Client_Data_75 client_XML_data_ext = 1004
	[(N_Protobuf.Serialize.XML.no_element) = true,
	 (N_Protobuf.Serialize.XSD.do_not_serialize) = true]; // -> 7.5, compat
  optional LayerReplies layerReplies = 1005;
  repeated Tag tags = 1006;
  optional N_Query_Engine.Concept.Concept concept = 1007;
  optional SortInfo.SortInfos sortInfos = 1008
	[(N_Protobuf.Serialize.requires_env) = "afs:explain=relevance"];
  optional ClusterInfos  clusterInfos = 1009
	[(N_Protobuf.Serialize.requires_env) = "afs:explain=relevance"];
  repeated Geo geo_reply_ext = 1010
	[ (N_Protobuf.Serialize.XML.name) = "geo" ];
  repeated N_Query_Engine.Spellcheck.Suggestion suggestion = 1011;
  optional N_Index.PageInfos pageInfos = 1013;
}

message LayerReplies
{
  repeated LayerReply reply = 1;
}

message LayerReply
{
  required string layer = 1;
  required Reply reply = 2;
}

message Geo
{
  extensions 1190 to 1199;
}

message GeoPoint
{
  optional uint64 dist = 1;
  optional double lat = 2;
  optional double long = 3;
}

message GeoPath
{
  optional uint64 items = 1;
  optional uint64 dist = 2; // distance of full path
  repeated GeoPoint point = 3;
}

extend Geo
{
  optional GeoPoint point = 1190;
  optional GeoPath path = 1191;
}
